
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  customer
  tech
  admin
}

enum TicketsStatus {
  open
  in_progress
  closed
}

model User { 
  id String @id @default(uuid())
  email String @unique
  name String
  password String
  avatarImg String
  role UserRole @default(customer)

  tickets Tickets[] @relation("CustomerTickets")
  assignedTickets Tickets[] @relation("TechTickets")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("users")
}
model Tickets {
  id String @id @default(uuid())
  title String @map("title")
  description String
  estimate Float
  // Reference to catalog service (CategoryServices)
  serviceId String @map("service_id")
  service CategoryServices @relation(fields: [serviceId], references: [id])
  filename String
  status TicketsStatus @default(open)
  userId String @map("user_id")
  user User @relation("CustomerTickets", fields: [userId], references: [id])
  techId String? @map("tech_id")
  tech User? @relation("TechTickets", fields: [techId], references: [id])

  // Extra services (parts) tied to this ticket
  services Services[] @relation("TicketsServices")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("tickets")
}

model Services {
  id String @id @default(uuid())
  name String
  amount Float
  // Extra service item belongs to exactly one ticket
  ticketId String @map("ticket_id")
  ticket Tickets @relation("TicketsServices", fields: [ticketId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("services")
}

// Catalog of basic services selectable when opening a ticket
model CategoryServices {
  id String @id @default(uuid())
  name String
  amount Float

  // Back-reference to tickets using this category service
  tickets Tickets[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("category_services")
}